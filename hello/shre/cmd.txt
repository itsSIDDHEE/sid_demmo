 sudo systemctl stop jenkins
 sudo apt-get remove --purge jenkins
    sudo rm -rf /var/lib/jenkins
    sudo userdel jenkins
    sudo groupdel jenkins # If a jenkins group exists and is not used by other services
# to install Jenkins 
    sudo apt update
	sudo apt upgrade -y
        sudo apt install openjdk-17-jdk -y
    curl -fsSL https://pkg.jenkins.io/debian/jenkins.io-2023.key | sudo tee \
      /usr/share/keyrings/jenkins-keyring.asc > /dev/null
    echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
      https://pkg.jenkins.io/debian binary/ | sudo tee \
      /etc/apt/sources.list.d/jenkins.list > /dev/null

    sudo apt update
    sudo apt install jenkins -y
    sudo systemctl start jenkins
    sudo systemctl enable Jenkins
    sudo systemctl status Jenkins
    sudo ufw allow 8080
    sudo ufw enable # if UFW is not already enabled

# to uninstall SonarQube 
sudo systemctl stop sonarqube
sudo systemctl disable sonarQube
If you started it manually (from a folder), just stop the process:

sudo pkill -f sonarQube

sudo rm -rf /opt/sonarqube
sudo deluser sonarqube
sudo delgroup sonarqube
sudo rm -rf /var/log/sonarqube
sudo rm -rf /etc/systemd/system/sonarqube.service
sudo rm -rf /etc/sonarqube

Step 5: Remove SonarQubeâ€™s database (optional)

If you used PostgreSQL or MySQL as backend, remove the database only if youâ€™re sure you donâ€™t need it:

For PostgreSQL:

sudo -u postgres psql
DROP DATABASE sonarqube;
DROP USER sonarqube;
\q


For MySQL:

mysql -u root -p
DROP DATABASE sonarqube;
DROP USER 'sonarqube'@'localhost';
EXIT;

ðŸ§¼ Step 6: Reload system daemon and clean cache
sudo systemctl daemon-reload
sudo systemctl reset-failed


# to install SonarQube 
